使用静态库来编译源文件并构成可执行文件的步骤如下：

编写源文件，例如test.c。

编译静态库，例如libtest.a，命令为：gcc -c test.c -o test.o，ar rcs libtest.a test.o。

编写主程序，例如main.c。

编译主程序并链接静态库，命令为：gcc main.c -L. -ltest -o main。

其中-L.表示在当前目录下查找库文件，-ltest表示链接libtest.a库文件。最终生成的可执行文件为main。

git add .
git commit -m "commit message"
git push origin master

如果您想取消最近的本地提交，可以使用以下命令：

git reset HEAD~1
这将取消 最近的提交 并将更改还原到上一个提交。如果您想完全删除最近的提交并将更改还原到上一个提交，请使用以下命令：

git reset --hard HEAD~1
请注意，这将永久删除最近的提交并且无法恢复。因此，请确保在执行此操作之前备份您的更改。

这些都可以再gpt上询问到！

g++ test_log.cpp -L. -lrocket -o test_log -lpthread


您可以使用以下命令行来使用g++结合动态库来编译可执行文件：

bash
g++ -o executable_file source_file.cpp -L/path/to/library -llibrary_name
其中，executable_file是您要生成的可执行文件的名称，source_file.cpp是您的源代码文件的名称，/path/to/library是动态库文件所在的路径，library_name是动态库文件的名称。

例如，如果您的源代码文件名为main.cpp，动态库文件名为libexample.so，动态库文件所在路径为/usr/local/lib，您可以使用以下命令行来编译可执行文件：

bash
g++ -o my_program main.cpp -L/usr/local/lib -lexample

g++ test_log.cpp -L. -lrocket -L/usr/lib -ltinyxml -o test_log -lpthread

# 可以成功把libtinyxml.a和librocket.a结合起来一起编译的代码！
g++  test_log.cpp -L. -lrocket -L/usr/lib -ltinyxml -lpthread -o test_log


# 下面这行命令 可用于检测我的RPC-serve服务所监听的套接字的过程是否有问题！
telnet 127.0.0.1 [端口号]
比如：telnet 127.0.0.1 10001


提交代码的git命令:
git add .
git commit -m "commit message"
git push origin dev-fanfan

撤销git commmit 提交到本地版本控制库代码的命令：
git reset HEAD~1

TODO:一定要把 加了定时器Timer模块相关的代码，结合EpollLoop模块的代码，整体看一下，捋一下逻辑和函数调用！
（屡明白了函数调用的各种方法之后，再往下走，不然我会蒙b的！）

2023-6-6到8日：（项目记录碎碎念，that is a very important record note！）
等下回来打一下断点在我的test_eventloop.cpp文件上，看看流程是到底怎么个走法的！然后看下函数调用的关系！
// 我自己再画个流程图处理，这样子，然后就能够理清楚这个思路了！！！
// 真的千万别以为这个项目很简单！！！你要用CPP把这个轮子造处理那是很难的知道么！！！

2023-6-9日：
我今天认真看过代码之后，真的把EventLoop的主流程（不包括定时器）的设计弄懂了！
（参考了我在/home/ubuntu/test/test_epoll_server.cpp这个借鉴了爱编程的大丙哥写出来的epoll使用案例才搞懂的）

打算明天继续把timer定时器这个大模块搞懂！然后就可以继续跟着大佬写下面的代码了！
记得看/写代码之前先把我没有提交的新的文件都提交到github上！先git push origin dev-fanfan
2023-6-12日：
我今天认真看过代码之后，把timer.h/.cpp,timer_event.h/.cpp的主流程（不包括定时器）的设计弄懂了！
2023-6-13日：
开IO线程以及，TCP-connection的封装代码的视频（这部分可以高倍速，因为我比较熟悉）！
ssh-keygen -t rsa -b 4096 -C "1160273522@example.com"